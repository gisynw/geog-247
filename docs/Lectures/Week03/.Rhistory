set.seed(123)  # For reproducibility
left_skewed_data <- rbeta(1000, shape1 = 5, shape2 = 2)
# Plot a histogram to visualize the left-skewed data
hist(left_skewed_data, breaks = 20, col = "lightblue", main = "", xlab = "Values", freq = FALSE)
lines(density(left_skewed_data, na.rm = TRUE),
col = "red",
lwd = 2)
abline(v = median(left_skewed_data), col = 'darkblue', lwd = 4, lty = 2)
abline(v = mean(left_skewed_data), col = 'darkgreen', lwd = 4, lty = 2)
skewness(left_skewed_data)
if (!require(ggplot2)) install.packages("ggplot2", dependencies = TRUE)
install.packages("conmat", repos = "https://idem-lab.r-universe.dev")
library(e1071);library(ggplot2)library(plotly);library(tidyverse);library(moments)
if (!require(ggplot2)) install.packages("ggplot2", dependencies = TRUE)
install.packages("conmat", repos = "https://idem-lab.r-universe.dev")
library(e1071);library(ggplot2);library(plotly);library(tidyverse);library(moments)
library(conmat)library(sf);library(leaflet); library(car)
if (!require(ggplot2)) install.packages("ggplot2", dependencies = TRUE)
install.packages("conmat", repos = "https://idem-lab.r-universe.dev")
library(e1071);library(ggplot2);library(plotly);library(tidyverse);library(moments)
library(conmat);library(sf);library(leaflet); library(car)
set.seed(123)  # For reproducibility
left_skewed_data <- rbeta(1000, shape1 = 5, shape2 = 2)
# Plot a histogram to visualize the left-skewed data
hist(left_skewed_data, breaks = 20, col = "lightblue", main = "", xlab = "Values", freq = FALSE)
lines(density(left_skewed_data, na.rm = TRUE),
col = "red",
lwd = 2)
abline(v = median(left_skewed_data), col = 'darkblue', lwd = 4, lty = 2)
abline(v = mean(left_skewed_data), col = 'darkgreen', lwd = 4, lty = 2)
skewness(left_skewed_data)
qqPlot(left_skewed_data, ylab = 'Data')
set.seed(123)  # For reproducibility
left_skewed_data <- rbeta(1000, shape1 = 5, shape2 = 2)
# Plot a histogram to visualize the left-skewed data
hist(left_skewed_data, breaks = 20, col = "lightblue", main = "", xlab = "Values", freq = FALSE)
lines(density(left_skewed_data, na.rm = TRUE),
col = "red",
lwd = 2)
abline(v = median(left_skewed_data), col = 'darkblue', lwd = 4, lty = 2)
abline(v = mean(left_skewed_data), col = 'darkgreen', lwd = 4, lty = 2)
skewness(left_skewed_data)
qqPlot(left_skewed_data, ylab = 'Data')
library(e1071);library(car)
library(e1071);library(car)
set.seed(123)  # For reproducibility
left_skewed_data <- rbeta(1000, shape1 = 5, shape2 = 2)
# Plot a histogram to visualize the left-skewed data
hist(left_skewed_data, breaks = 20, col = "lightblue", main = "", xlab = "Values", freq = FALSE)
lines(density(left_skewed_data, na.rm = TRUE),
col = "red",
lwd = 2)
abline(v = median(left_skewed_data), col = 'darkblue', lwd = 4, lty = 2)
abline(v = mean(left_skewed_data), col = 'darkgreen', lwd = 4, lty = 2)
skewness(left_skewed_data)
qqPlot(left_skewed_data, ylab = 'Data')
skewness(left_skewed_data)
data("airquality")
hist(na.omit(airquality$Ozone),
main = "",
xlab = "Ozone (ppb)",
col = "lightblue",
border = "black",
breaks = 20,
freq = FALSE)
lines(density(airquality$Ozone, na.rm = TRUE),
col = "red",
lwd = 2)
abline(v = median(na.omit(airquality$Ozone)), col = 'darkblue', lwd = 4, lty = 2)
abline(v = mean(na.omit(airquality$Ozone)), col = 'darkgreen', lwd = 4, lty = 2)
skewness(na.omit(airquality$Ozone))
qqPlot(na.omit(airquality$Ozone), ylab = 'Ozone')
set.seed(123)  # For reproducibility
left_skewed_data <- rbeta(1000, shape1 = 5, shape2 = 2)
# Plot a histogram to visualize the left-skewed data
hist(left_skewed_data, breaks = 20, col = "lightblue", main = "", xlab = "Values", freq = FALSE)
lines(density(left_skewed_data, na.rm = TRUE),
col = "red",
lwd = 2)
abline(v = median(left_skewed_data), col = 'darkblue', lwd = 4, lty = 2)
abline(v = mean(left_skewed_data), col = 'darkgreen', lwd = 4, lty = 2)
skewness(left_skewed_data)
qqnorm(left_skewed_data, ylab = 'Data')
set.seed(123)  # For reproducibility
left_skewed_data <- rbeta(1000, shape1 = 5, shape2 = 2)
# Plot a histogram to visualize the left-skewed data
hist(left_skewed_data, breaks = 20, col = "lightblue", main = "", xlab = "Values", freq = FALSE)
lines(density(left_skewed_data, na.rm = TRUE),
col = "red",
lwd = 2)
abline(v = median(left_skewed_data), col = 'darkblue', lwd = 4, lty = 2)
abline(v = mean(left_skewed_data), col = 'darkgreen', lwd = 4, lty = 2)
skewness(left_skewed_data)
qqnorm(left_skewed_data, ylab = 'Data')
qqline(left_skewed_data, col = "blue")
data("airquality")
hist(na.omit(airquality$Ozone),
main = "",
xlab = "Ozone (ppb)",
col = "lightblue",
border = "black",
breaks = 20,
freq = FALSE)
lines(density(airquality$Ozone, na.rm = TRUE),
col = "red",
lwd = 2)
abline(v = median(na.omit(airquality$Ozone)), col = 'darkblue', lwd = 4, lty = 2)
abline(v = mean(na.omit(airquality$Ozone)), col = 'darkgreen', lwd = 4, lty = 2)
skewness(na.omit(airquality$Ozone))
qqnorm(na.omit(airquality$Ozone), ylab = 'Ozone')
qqline(na.omit(airquality$Ozone), col = 'blue')
data("airquality")
hist(na.omit(airquality$Ozone),
main = "",
xlab = "Ozone (ppb)",
col = "lightblue",
border = "black",
breaks = 20,
freq = FALSE)
lines(density(airquality$Ozone, na.rm = TRUE),
col = "red",
lwd = 2)
abline(v = median(na.omit(airquality$Ozone)), col = 'darkblue', lwd = 4, lty = 2)
abline(v = mean(na.omit(airquality$Ozone)), col = 'darkgreen', lwd = 4, lty = 2)
skewness(na.omit(airquality$Ozone))
qqnorm(na.omit(airquality$Ozone), ylab = 'Ozone')
qqline(na.omit(airquality$Ozone), col = 'blue')
set.seed(123)  # For reproducibility
left_skewed_data <- rbeta(1000, shape1 = 15, shape2 = 2)
# Plot a histogram to visualize the left-skewed data
hist(left_skewed_data, breaks = 20, col = "lightblue", main = "", xlab = "Values", freq = FALSE)
lines(density(left_skewed_data, na.rm = TRUE),
col = "red",
lwd = 2)
abline(v = median(left_skewed_data), col = 'darkblue', lwd = 4, lty = 2)
abline(v = mean(left_skewed_data), col = 'darkgreen', lwd = 4, lty = 2)
skewness(left_skewed_data)
qqnorm(left_skewed_data, ylab = 'Data')
qqline(left_skewed_data, col = "blue")
set.seed(123)  # For reproducibility
left_skewed_data <- rbeta(1000, shape1 = 25, shape2 = 2)
# Plot a histogram to visualize the left-skewed data
hist(left_skewed_data, breaks = 20, col = "lightblue", main = "", xlab = "Values", freq = FALSE)
lines(density(left_skewed_data, na.rm = TRUE),
col = "red",
lwd = 2)
abline(v = median(left_skewed_data), col = 'darkblue', lwd = 4, lty = 2)
abline(v = mean(left_skewed_data), col = 'darkgreen', lwd = 4, lty = 2)
skewness(left_skewed_data)
qqnorm(left_skewed_data, ylab = 'Data')
qqline(left_skewed_data, col = "blue")
set.seed(123)  # For reproducibility
left_skewed_data <- rbeta(1000, shape1 = 35, shape2 = 2)
# Plot a histogram to visualize the left-skewed data
hist(left_skewed_data, breaks = 20, col = "lightblue", main = "", xlab = "Values", freq = FALSE)
lines(density(left_skewed_data, na.rm = TRUE),
col = "red",
lwd = 2)
abline(v = median(left_skewed_data), col = 'darkblue', lwd = 4, lty = 2)
abline(v = mean(left_skewed_data), col = 'darkgreen', lwd = 4, lty = 2)
skewness(left_skewed_data)
qqnorm(left_skewed_data, ylab = 'Data')
qqline(left_skewed_data, col = "blue")
set.seed(123)  # For reproducibility
left_skewed_data <- rbeta(1000, shape1 = 55, shape2 = 2)
# Plot a histogram to visualize the left-skewed data
hist(left_skewed_data, breaks = 20, col = "lightblue", main = "", xlab = "Values", freq = FALSE)
lines(density(left_skewed_data, na.rm = TRUE),
col = "red",
lwd = 2)
abline(v = median(left_skewed_data), col = 'darkblue', lwd = 4, lty = 2)
abline(v = mean(left_skewed_data), col = 'darkgreen', lwd = 4, lty = 2)
skewness(left_skewed_data)
qqnorm(left_skewed_data, ylab = 'Data')
qqline(left_skewed_data, col = "blue")
par(mfrow = c(2, 1))
par(mar = c(1, 4, 4, 8))
data("airquality")
# Plot a histogram of the Temp variable
hist(airquality$Temp,
main = "Histogram of Temperature (Temp)",
xlab = "Temperature (Â°F)",
col = "lightblue",
border = "black",
breaks = 10,
freq = FALSE)
abline(v = mean(airquality$Temp, na.rm = TRUE), lty = 2, lwd = 3)
# Add a normal distribution curve
curve(dnorm(x, mean = mean(airquality$Temp, na.rm = TRUE),
sd = sd(airquality$Temp, na.rm = TRUE)),
add = TRUE, col = "red", lwd = 2)
temp_standardized <- scale(airquality$Temp)
hist(temp_standardized,
main = "Standardized Temperature (Normal Curve)",
xlab = "Standardized Temp (Z-scores)",
col = "lightblue",
border = "black",
breaks = 10,
probability = TRUE)
abline(v = 0 ,lty = 2,lwd = 3)
curve(dnorm(x, mean = 0, sd = 1), add = TRUE, col = "red", lwd = 2)
y <- rnorm(100, mean = 0, sd = 1)
hist(y, breaks = 10, xlab = 'x', main = NULL, freq = FALSE)
text(-2, 0.3, labels = paste('kurtosis=', round(kurtosis(y),3)))
lines(density(y), col = "red", lwd = 2)
library(e1071)
# Create a distribution with high kurtosis (~5)
set.seed(123)
data_high_kurtosis <- c(rnorm(1000, mean = 0, sd = 2), rnorm(200, mean = 0, sd = 0.15))
# Create a distribution with low kurtosis (~1)
set.seed(123)
data_low_kurtosis <- runif(1200, min = -3, max = 3)
# Plot the high kurtosis distribution
hist(data_high_kurtosis, breaks = 30, probability = TRUE,
main = paste0("Histogram with High Kurtosis","( ",round(kurtosis(data_high_kurtosis),3)," )"), col = "lightblue", border = "black")
lines(density(data_high_kurtosis), col = "red", lwd = 2)
# Calculate and print kurtosis
cat("Kurtosis for High Kurtosis Distribution:", kurtosis(data_high_kurtosis), "\n")
# Plot the low kurtosis distribution
hist(data_low_kurtosis, breaks = 30, probability = TRUE,
main = paste0("Histogram with Low Kurtosis","( ",round(kurtosis(data_low_kurtosis),3)," )"), col = "lightblue", border = "black")
text(-2, 0.3, labels = paste('kurtosis=', round(kurtosis(data_low_kurtosis),3)))
lines(density(data_low_kurtosis), col = "red", lwd = 2)
# Calculate and print kurtosis
cat("Kurtosis for Low Kurtosis Distribution:", kurtosis(data_low_kurtosis), "\n")
library(e1071);library(car)
library(e1071);library(car)
data("airquality")
hist(na.omit(airquality$Ozone),
main = "",
xlab = "Ozone (ppb)",
col = "lightblue",
border = "black",
breaks = 20,
freq = FALSE)
lines(density(airquality$Ozone, na.rm = TRUE),
col = "red",
lwd = 2)
abline(v = median(na.omit(airquality$Ozone)), col = 'darkblue', lwd = 4, lty = 2)
abline(v = mean(na.omit(airquality$Ozone)), col = 'darkgreen', lwd = 4, lty = 2)
skewness(na.omit(airquality$Ozone))
qqnorm(na.omit(airquality$Ozone), ylab = 'Ozone')
qqline(na.omit(airquality$Ozone), col = 'blue')
qqplot(na.omit(airquality$Ozone))
data("airquality")
hist(na.omit(airquality$Ozone),
main = "",
xlab = "Ozone (ppb)",
col = "lightblue",
border = "black",
breaks = 20,
freq = FALSE)
lines(density(airquality$Ozone, na.rm = TRUE),
col = "red",
lwd = 2)
abline(v = median(na.omit(airquality$Ozone)), col = 'darkblue', lwd = 4, lty = 2)
abline(v = mean(na.omit(airquality$Ozone)), col = 'darkgreen', lwd = 4, lty = 2)
skewness(na.omit(airquality$Ozone))
qqnorm(na.omit(airquality$Ozone), ylab = 'Ozone')
qqline(na.omit(airquality$Ozone), col = 'blue')
qqplot(na.omit(airquality$Ozone))
data("airquality")
hist(na.omit(airquality$Ozone),
main = "",
xlab = "Ozone (ppb)",
col = "lightblue",
border = "black",
breaks = 20,
freq = FALSE)
lines(density(airquality$Ozone, na.rm = TRUE),
col = "red",
lwd = 2)
abline(v = median(na.omit(airquality$Ozone)), col = 'darkblue', lwd = 4, lty = 2)
abline(v = mean(na.omit(airquality$Ozone)), col = 'darkgreen', lwd = 4, lty = 2)
skewness(na.omit(airquality$Ozone))
qqnorm(na.omit(airquality$Ozone), ylab = 'Ozone')
qqline(na.omit(airquality$Ozone), col = 'blue')
qqPlot(my_data$len)
data("airquality")
hist(na.omit(airquality$Ozone),
main = "",
xlab = "Ozone (ppb)",
col = "lightblue",
border = "black",
breaks = 20,
freq = FALSE)
lines(density(airquality$Ozone, na.rm = TRUE),
col = "red",
lwd = 2)
abline(v = median(na.omit(airquality$Ozone)), col = 'darkblue', lwd = 4, lty = 2)
abline(v = mean(na.omit(airquality$Ozone)), col = 'darkgreen', lwd = 4, lty = 2)
skewness(na.omit(airquality$Ozone))
qqnorm(na.omit(airquality$Ozone), ylab = 'Ozone')
qqline(na.omit(airquality$Ozone), col = 'blue')
my_data <- ToothGrowth
qqPlot(my_data$len)
set.seed(123)  # For reproducibility
left_skewed_data <- rbeta(1000, shape1 = 5, shape2 = 2)
# Plot a histogram to visualize the left-skewed data
hist(left_skewed_data, breaks = 20, col = "lightblue", main = "", xlab = "Values", freq = FALSE)
lines(density(left_skewed_data, na.rm = TRUE),
col = "red",
lwd = 2)
abline(v = median(left_skewed_data), col = 'darkblue', lwd = 4, lty = 2)
abline(v = mean(left_skewed_data), col = 'darkgreen', lwd = 4, lty = 2)
skewness(left_skewed_data)
data("airquality")
hist(na.omit(airquality$Ozone),
main = "",
xlab = "Ozone (ppb)",
col = "lightblue",
border = "black",
breaks = 20,
freq = FALSE)
lines(density(airquality$Ozone, na.rm = TRUE),
col = "red",
lwd = 2)
abline(v = median(na.omit(airquality$Ozone)), col = 'darkblue', lwd = 4, lty = 2)
abline(v = mean(na.omit(airquality$Ozone)), col = 'darkgreen', lwd = 4, lty = 2)
skewness(na.omit(airquality$Ozone))
qqnorm(na.omit(airquality$Ozone), ylab = 'Ozone')
qqline(na.omit(airquality$Ozone), col = 'blue')
my_data <- ToothGrowth
qqPlot(my_data$len)
na.omit(airquality$Ozone)
data("airquality")
hist(na.omit(airquality$Ozone),
main = "",
xlab = "Ozone (ppb)",
col = "lightblue",
border = "black",
breaks = 20,
freq = FALSE)
lines(density(airquality$Ozone, na.rm = TRUE),
col = "red",
lwd = 2)
abline(v = median(na.omit(airquality$Ozone)), col = 'darkblue', lwd = 4, lty = 2)
abline(v = mean(na.omit(airquality$Ozone)), col = 'darkgreen', lwd = 4, lty = 2)
skewness(na.omit(airquality$Ozone))
qqnorm(na.omit(airquality$Ozone), ylab = 'Ozone')
qqline(na.omit(airquality$Ozone), col = 'blue')
my_data <- na.omit(airquality$Ozone)
qqPlot(my_data)
data("airquality")
hist(na.omit(airquality$Ozone),
main = "",
xlab = "Ozone (ppb)",
col = "lightblue",
border = "black",
breaks = 20,
freq = FALSE)
lines(density(airquality$Ozone, na.rm = TRUE),
col = "red",
lwd = 2)
abline(v = median(na.omit(airquality$Ozone)), col = 'darkblue', lwd = 4, lty = 2)
abline(v = mean(na.omit(airquality$Ozone)), col = 'darkgreen', lwd = 4, lty = 2)
skewness(na.omit(airquality$Ozone))
qqnorm(na.omit(airquality$Ozone), ylab = 'Ozone')
qqline(na.omit(airquality$Ozone), col = 'blue')
scatterplotMatrix(~ poptotal + popdensity+percollege+popblack+percadultpoverty,  data = midwest, smooth = list(span = 0.45, lty.smooth = 1, col.smooth = 'red', col.var = 'red'), regLine = list(col = 'green'))
data("midwest")
scatterplotMatrix(~ poptotal + popdensity+percollege+popblack+percadultpoverty,  data = midwest, smooth = list(span = 0.45, lty.smooth = 1, col.smooth = 'red', col.var = 'red'), regLine = list(col = 'green'))
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
data("midwest")
scatterplotMatrix(~ poptotal + popdensity+percollege+popblack+percadultpoverty,  data = midwest, smooth = list(span = 0.45, lty.smooth = 1, col.smooth = 'red', col.var = 'red'), regLine = list(col = 'green'))
par(mfrow = c(2, 1))
par(mar = c(1, 4, 4, 8))
data("airquality")
# Plot a histogram of the Temp variable
hist(airquality$Temp,
main = "Histogram of Temperature (Temp)",
xlab = "Temperature (Â°F)",
col = "lightblue",
border = "black",
breaks = 10,
freq = FALSE)
abline(v = mean(airquality$Temp, na.rm = TRUE), lty = 2, lwd = 3)
# Add a normal distribution curve
curve(dnorm(x, mean = mean(airquality$Temp, na.rm = TRUE),
sd = sd(airquality$Temp, na.rm = TRUE)),
add = TRUE, col = "red", lwd = 2)
temp_standardized <- scale(airquality$Temp)
hist(temp_standardized,
main = "Standardized Temperature (Normal Curve)",
xlab = "Standardized Temp (Z-scores)",
col = "lightblue",
border = "black",
breaks = 10,
probability = TRUE)
abline(v = 0 ,lty = 2,lwd = 3)
curve(dnorm(x, mean = 0, sd = 1), add = TRUE, col = "red", lwd = 2)
