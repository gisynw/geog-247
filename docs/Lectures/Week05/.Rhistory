VIF(multi_model)
car::vif(multi_model)
car::vif(multi_model)
evals = read.csv('evals.csv')
getwd()
getwd()
evals = read.csv('evals.csv')
##Task 1
# a
plot(evals$bty_avg~evals$bty_f1lower)
library(regclass)
loans = read.csv('loans.csv')
loans$issue = as.factor(loans$issue)
loans$bankruptcy = as.factor(loans$bankruptcy)
loans$income_ver = as.factor(loans$income_ver)
lm_model = lm(interest_rate~bankruptcy, data = loans)
summary(lm_model)
lm_model_3level = lm(interest_rate~income_ver, data = loans)
summary(lm_model_3level)
colnames(loans)
multi_model = lm(interest_rate~income_ver+debt_to_income+credit_util+bankruptcy+term+issue + credit_checks,data = loans)
summary(multi_model)
car::vif(multi_model)
hist(multi_model$residuals)
plot(multi_model$residuals~multi_model$fitted.values)
plot(multi_model$fitted.values~multi_model$residuals)
loans = read.csv('loans.csv')
library(MASS)
data('Boston')
force(Boston)
# Load required packages
library(MASS)    # For the Boston dataset
library(leaps)   # For best subset selection
# Load the Boston housing dataset
data(Boston)
# Best subset selection
best_subset <- regsubsets(medv ~ ., data = Boston, nbest = 1, nvmax = 13)
# Summary of results
summary_best <- summary(best_subset)
# Print model details
print(summary_best)
# Find the best model based on adjusted R-squared
best_model_index <- which.max(summary_best$adjr2)
cat("Best model has", best_model_index, "predictors with highest adjusted R-squared:", max(summary_best$adjr2), "\n")
# Plot adjusted R-squared for different models
plot(summary_best$adjr2, type = "b", pch = 19, col = "blue",
xlab = "Number of Predictors", ylab = "Adjusted R-Squared",
main = "Best Subset Selection - Adjusted R-Squared")
# Add a point for the best model
points(best_model_index, max(summary_best$adjr2), col = "red", pch = 19, cex = 1.5)
# Load required packages
library(MASS)    # For the Boston dataset
library(leaps)   # For best subset selection
# Load the Boston housing dataset
data(Boston)
# Best subset selection
best_subset <- regsubsets(medv ~ ., data = Boston, nbest = 1, nvmax = 13)
# Summary of results
summary_best <- summary(best_subset)
# Print model details
print(summary_best)
# Find the best model based on adjusted R-squared
best_model_index <- which.max(summary_best$adjr2)
cat("Best model has", best_model_index, "predictors with highest adjusted R-squared:", max(summary_best$adjr2), "\n")
# Plot adjusted R-squared for different models
plot(summary_best$adjr2, type = "b", pch = 19, col = "blue",
xlab = "Number of Predictors", ylab = "Adjusted R-Squared",
main = "Best Subset Selection - Adjusted R-Squared")
# Add a point for the best model
points(best_model_index, max(summary_best$adjr2), col = "red", pch = 19, cex = 1.5)
# The number of
# Define the number of predictors from 1 to 20
num_predictors <- 1:20
# Compute total models for each number of predictors (2^p)
total_models <- 2^num_predictors
# Create a data frame for visualization
model_df <- data.frame(Num_Predictors = num_predictors, Total_Models = total_models)
# Print the table
print(model_df)
# Plot the growth of models
plot(num_predictors, total_models, type = "b", pch = 19, col = "blue",
xlab = "Number of Predictors (p)", ylab = "Total Models (2^p)",
main = "Growth of Models in Best Subset Selection", log = "y")
# Highlight extreme points
points(20, 2^20, col = "red", pch = 19, cex = 1.5)
text(20, 2^20, labels = paste0("2^20 = ", format(2^20, scientific = FALSE)), pos = 3, col = "red")
# The number of
# Define the number of predictors from 1 to 20
num_predictors <- 1:20
# Compute total models for each number of predictors (2^p)
total_models <- 2^num_predictors
# Create a data frame for visualization
model_df <- data.frame(Num_Predictors = num_predictors, Total_Models = total_models)
options(scipen = 999)
# Print the table
print(model_df)
# Plot the growth of models
plot(num_predictors, total_models, type = "b", pch = 19, col = "blue",
xlab = "Number of Predictors (p)", ylab = "Total Models (2^p)",
main = "Growth of Models in Best Subset Selection", log = "y")
# Highlight extreme points
points(20, 2^20, col = "red", pch = 19, cex = 1.5)
text(20, 2^20, labels = paste0("2^20 = ", format(2^20, scientific = FALSE)), pos = 3, col = "red")
2^20
# Load required packages
library(MASS)    # For the Boston dataset
library(leaps)   # For best subset selection
# Load the Boston housing dataset
data(Boston)
# Best subset selection
best_subset <- regsubsets(medv ~ ., data = Boston, nbest = 1, nvmax = 10)
# Summary of results
summary_best <- summary(best_subset)
# Print model details
print(summary_best)
# Load required packages
library(MASS)    # For the Boston dataset
library(leaps)   # For best subset selection
# Load the Boston housing dataset
data(Boston)
# Best subset selection
best_subset <- regsubsets(medv ~ ., data = Boston, nbest = 1, nvmax = 13)
# Summary of results
summary_best <- summary(best_subset)
# Print model details
print(summary_best)
# Find the best model based on adjusted R-squared
best_model_index <- which.max(summary_best$adjr2)
cat("Best model has", best_model_index, "predictors with highest adjusted R-squared:", max(summary_best$adjr2), "\n")
# Plot adjusted R-squared for different models
plot(summary_best$adjr2, type = "b", pch = 19, col = "blue",
xlab = "Number of Predictors", ylab = "Adjusted R-Squared",
main = "Best Subset Selection - Adjusted R-Squared")
# Add a point for the best model
points(best_model_index, max(summary_best$adjr2), col = "red", pch = 19, cex = 1.5)
# Find the best model based on adjusted R-squared
best_model_index <- which.max(summary_best$adjr2)
best_model <- names(which(summary_best$which[best_model_index,]))
best_model
cat("Best model has", best_model_index, "predictors with highest adjusted R-squared:", max(summary_best$adjr2), "\n")
# Plot adjusted R-squared for different models
plot(summary_best$adjr2, type = "b", pch = 19, col = "blue",
xlab = "Number of Predictors", ylab = "Adjusted R-Squared",
main = "Best Subset Selection - Adjusted R-Squared")
# Add a point for the best model
points(best_model_index, max(summary_best$adjr2), col = "red", pch = 19, cex = 1.5)
which(summary_best$which[best_model_index,])
best_model <- names(which(summary_best$which[best_model_index,]))
best_model
# Find the best model based on adjusted R-squared
best_model_index <- which.max(summary_best$adjr2)
best_model <- names(which(summary_best$which[best_model_index,]))
cat("Best model has", best_model_index, "predictors with highest adjusted R-squared:", max(summary_best$adjr2), "\n")
# Plot adjusted R-squared for different models
plot(summary_best$adjr2, type = "b", pch = 19, col = "blue",
xlab = "Number of Predictors", ylab = "Adjusted R-Squared",
main = "Best Subset Selection - Adjusted R-Squared")
# Add a point for the best model
points(best_model_index, max(summary_best$adjr2), col = "red", pch = 19, cex = 1.5)
# Find the best model based on adjusted R-squared
best_model_index <- which.max(summary_best$adjr2)
best_variables <- names(which(summary_best$which[best_model_index,]))
print(best_variables)
cat("Best model has", best_model_index, "predictors with highest adjusted R-squared:", max(summary_best$adjr2), "\n")
# Plot adjusted R-squared for different models
plot(summary_best$adjr2, type = "b", pch = 19, col = "blue",
xlab = "Number of Predictors", ylab = "Adjusted R-Squared",
main = "Best Subset Selection - Adjusted R-Squared")
# Add a point for the best model
points(best_model_index, max(summary_best$adjr2), col = "red", pch = 19, cex = 1.5)
# Find the best model based on adjusted R-squared
best_model_index <- which.max(summary_best$cp)
best_variables <- names(which(summary_best$which[best_model_index,]))
print(best_variables)
cat("Best model has", best_model_index, "predictors with highest adjusted R-squared:", max(summary_best$adjr2), "\n")
# Plot adjusted R-squared for different models
plot(summary_best$adjr2, type = "b", pch = 19, col = "blue",
xlab = "Number of Predictors", ylab = "Adjusted R-Squared",
main = "Best Subset Selection - Adjusted R-Squared")
# Add a point for the best model
points(best_model_index, max(summary_best$adjr2), col = "red", pch = 19, cex = 1.5)
# Find the best model based on adjusted R-squared
best_model_index <- which.max(summary_best$cp)
best_variables <- names(which(summary_best$which[best_model_index,]))
print(best_variables)
cat("Best model has", best_model_index, "predictors with highest adjusted R-squared:", max(summary_best$cp), "\n")
# Plot adjusted R-squared for different models
plot(summary_best$cp, type = "b", pch = 19, col = "blue",
xlab = "Number of Predictors", ylab = "Adjusted R-Squared",
main = "Best Subset Selection - Adjusted R-Squared")
# Add a point for the best model
points(best_model_index, max(summary_best$adjr2), col = "red", pch = 19, cex = 1.5)
# Find the best model based on adjusted R-squared
best_model_index <- which.max(summary_best$cp)
best_variables <- names(which(summary_best$which[best_model_index,]))
print(best_variables)
cat("Best model has", best_model_index, "predictors with highest adjusted R-squared:", max(summary_best$cp), "\n")
# Plot adjusted R-squared for different models
plot(summary_best$cp, type = "b", pch = 19, col = "blue",
xlab = "Number of Predictors", ylab = "Adjusted R-Squared",
main = "Best Subset Selection - Adjusted R-Squared")
# Add a point for the best model
points(best_model_index, max(summary_best$cp), col = "red", pch = 19, cex = 1.5)
# Find the best model based on adjusted R-squared
best_model_index <- which.max(summary_best$adjr2)
best_variables <- names(which(summary_best$which[best_model_index,]))
print(best_variables)
cat("Best model has", best_model_index, "predictors with highest adjusted R-squared:", max(summary_best$adjr2), "\n")
# Plot adjusted R-squared for different models
plot(summary_best$adjr2, type = "b", pch = 19, col = "blue",
xlab = "Number of Predictors", ylab = "Adjusted R-Squared",
main = "Best Subset Selection - Adjusted R-Squared")
# Add a point for the best model
points(best_model_index, max(summary_best$adjr2), col = "red", pch = 19, cex = 1.5)
# Find the best model based on C_P
best_model_index <- which.max(summary_best$cp)
best_variables <- names(which(summary_best$which[best_model_index,]))
print(best_variables)
cat("Best model has", best_model_index, "predictors with highest adjusted R-squared:", max(summary_best$cp), "\n")
# Plot adjusted R-squared for different models
plot(summary_best$cp, type = "b", pch = 19, col = "blue",
xlab = "Number of Predictors", ylab = "Adjusted R-Squared",
main = "Best Subset Selection - Adjusted R-Squared")
# Add a point for the best model
points(best_model_index, max(summary_best$cp), col = "red", pch = 19, cex = 1.5)
# Find the best model based on C_P
best_model_index <- which.min(summary_best$cp)
best_variables <- names(which(summary_best$which[best_model_index,]))
print(best_variables)
cat("Best model has", best_model_index, "predictors with highest adjusted R-squared:", max(summary_best$cp), "\n")
# Plot adjusted R-squared for different models
plot(summary_best$cp, type = "b", pch = 19, col = "blue",
xlab = "Number of Predictors", ylab = "Adjusted R-Squared",
main = "Best Subset Selection - Adjusted R-Squared")
# Add a point for the best model
points(best_model_index, max(summary_best$cp), col = "red", pch = 19, cex = 1.5)
# Find the best model based on C_P
best_model_index <- which.min(summary_best$cp)
best_variables <- names(which(summary_best$which[best_model_index,]))
print(best_variables)
cat("Best model has", best_model_index, "predictors with highest adjusted R-squared:", max(summary_best$cp), "\n")
# Plot adjusted R-squared for different models
plot(summary_best$cp, type = "b", pch = 19, col = "blue",
xlab = "Number of Predictors", ylab = "Adjusted R-Squared",
main = "Best Subset Selection - Adjusted R-Squared")
# Add a point for the best model
points(best_model_index, min(summary_best$cp), col = "red", pch = 19, cex = 1.5)
# Find the best model based on C_P (AIC)
best_model_index <- which.min(summary_best$cp)
best_variables <- names(which(summary_best$which[best_model_index,]))
print(best_variables)
cat("Best model has", best_model_index, "predictors with highest adjusted C_P (AIC):", max(summary_best$cp), "\n")
# Plot adjusted R-squared for different models
plot(summary_best$cp, type = "b", pch = 19, col = "blue",
xlab = "Number of Predictors", ylab = "Adjusted R-Squared",
main = "Best Subset Selection - Adjusted R-Squared")
# Add a point for the best model
points(best_model_index, min(summary_best$cp), col = "red", pch = 19, cex = 1.5)
# Find the best model based on C_P (AIC)
best_model_index <- which.min(summary_best$cp)
best_variables <- names(which(summary_best$which[best_model_index,]))
print(best_variables)
cat("Best model has", best_model_index, "predictors with highest adjusted C_P:", max(summary_best$cp), "\n")
# Plot adjusted R-squared for different models
plot(summary_best$cp, type = "b", pch = 19, col = "blue",
xlab = "Number of Predictors", ylab = "C_P",
main = "predictors with highest adjusted C_P")
# Add a point for the best model
points(best_model_index, min(summary_best$cp), col = "red", pch = 19, cex = 1.5)
# Find the best model based on C_P (AIC)
best_model_index <- which.min(summary_best$cp)
best_variables <- names(which(summary_best$which[best_model_index,]))
print(best_variables)
cat("Best model has", best_model_index, "predictors with lowest C_P:", max(summary_best$cp), "\n")
# Plot adjusted R-squared for different models
plot(summary_best$cp, type = "b", pch = 19, col = "blue",
xlab = "Number of Predictors", ylab = "C_P",
main = "predictors with lowest C_P")
# Add a point for the best model
points(best_model_index, min(summary_best$cp), col = "red", pch = 19, cex = 1.5)
# Find the best model based on BIC
best_model_index <- which.min(summary_best$bic)
best_variables <- names(which(summary_best$which[best_model_index,]))
print(best_variables)
cat("Best model has", best_model_index, "predictors with lowest BIC:", max(summary_best$bic), "\n")
# Plot adjusted R-squared for different models
plot(summary_best$bic, type = "b", pch = 19, col = "blue",
xlab = "Number of Predictors", ylab = "C_P",
main = "predictors with lowest BIC")
# Add a point for the best model
points(best_model_index, min(summary_best$bic), col = "red", pch = 19, cex = 1.5)
# Find the best model based on BIC
best_model_index <- which.min(summary_best$bic)
best_variables <- names(which(summary_best$which[best_model_index,]))
print(best_variables)
cat("Best model has", best_model_index, "predictors with lowest BIC:", max(summary_best$bic), "\n")
# Plot adjusted R-squared for different models
plot(summary_best$bic, type = "b", pch = 19, col = "blue",
xlab = "Number of Predictors", ylab = "BIC",
main = "predictors with lowest BIC")
# Add a point for the best model
points(best_model_index, min(summary_best$bic), col = "red", pch = 19, cex = 1.5)
# Define the number of predictors from 1 to 20
num_predictors <- 1:20
# Compute total models for Best Subset Selection (2^p)
total_models <- 2^num_predictors
# Compute total models for Forward Selection (1 + p(p+1)/2)
forward_models <- 1 + (num_predictors * (num_predictors + 1)) / 2
# Create a data frame for visualization
model_df <- data.frame(Num_Predictors = num_predictors,
Total_Models = total_models,
Forward_Models = forward_models)
options(scipen = 999)
# Print the table
print(model_df)
# Plot Best Subset Selection (Exponential Growth)
plot(num_predictors, total_models, type = "b", pch = 19, col = "blue",
xlab = "Number of Predictors (p)", ylab = "Total Models",
main = "Growth of Models: Best Subset vs. Forward Selection", log = "y")
# Add Forward Selection line (Polynomial Growth)
lines(num_predictors, forward_models, type = "b", pch = 17, col = "red")
# Add a legend
legend("topleft", legend = c("Best Subset (2^p)", "Forward Selection (1 + p(p+1)/2)"),
col = c("blue", "red"), pch = c(19, 17), lty = 1)
# Highlight extreme points
points(20, 2^20, col = "blue", pch = 19, cex = 1.5)
text(20, 2^20, labels = paste0("2^20 = ", format(2^20, scientific = FALSE)), pos = 3, col = "blue")
points(20, forward_models[20], col = "red", pch = 17, cex = 1.5)
text(20, forward_models[20], labels = paste0("Forward = ", forward_models[20]), pos = 4, col = "red")
# Define the number of predictors from 1 to 20
num_predictors <- 1:20
# Compute total models for Best Subset Selection (2^p)
total_models <- 2^num_predictors
# Compute total models for Forward Selection (1 + p(p+1)/2)
forward_models <- 1 + (num_predictors * (num_predictors + 1)) / 2
# Create a data frame for visualization
model_df <- data.frame(Num_Predictors = num_predictors,
Total_Models = total_models,
Forward_Models = forward_models)
options(scipen = 999)
# Print the table
print(model_df)
# Plot Best Subset Selection (Exponential Growth)
plot(num_predictors, total_models, type = "b", pch = 19, col = "blue",
xlab = "Number of Predictors (p)", ylab = "Total Models",
main = "Growth of Models: Best Subset vs. Forward Selection", log = "y")
# Add Forward Selection line (Polynomial Growth)
lines(num_predictors, forward_models, type = "b", pch = 17, col = "red")
# Add a legend
legend("topleft", legend = c("Best Subset", "Forward Selection"),
col = c("blue", "red"), pch = c(19, 17), lty = 1)
# Highlight extreme points
points(20, 2^20, col = "blue", pch = 19, cex = 1.5)
text(20, 2^20, labels = paste0("2^20 = ", format(2^20, scientific = FALSE)), pos = 3, col = "blue")
points(20, forward_models[20], col = "red", pch = 17, cex = 1.5)
text(20, forward_models[20], labels = paste0("Forward = ", forward_models[20]), pos = 4, col = "red")
# Define the number of predictors from 1 to 20
num_predictors <- 1:20
# Compute total models for Best Subset Selection (2^p)
total_models <- 2^num_predictors
# Compute total models for Forward Selection (1 + p(p+1)/2)
forward_models <- 1 + (num_predictors * (num_predictors + 1)) / 2
# Create a data frame for visualization
model_df <- data.frame(Num_Predictors = num_predictors,
Total_Models = total_models,
Forward_Models = forward_models)
options(scipen = 999)
# Print the table
print(model_df)
# Plot Best Subset Selection (Exponential Growth)
plot(num_predictors, total_models, type = "b", pch = 19, col = "blue",
xlab = "Number of Predictors (p)", ylab = "Total Models",
main = "Growth of Models: Best Subset vs. Forward Selection", log = "y")
# Add Forward Selection line (Polynomial Growth)
lines(num_predictors, forward_models, type = "b", pch = 17, col = "red")
# Add a legend
legend("topleft", legend = c("Best Subset", "Forward Selection"),
col = c("blue", "red"), pch = c(19, 17), lty = 1)
# Highlight extreme points
# points(20, 2^20, col = "blue", pch = 19, cex = 1.5)
# text(20, 2^20, labels = paste0("2^20 = ", format(2^20, scientific = FALSE)), pos = 3, col = "blue")
#
# points(20, forward_models[20], col = "red", pch = 17, cex = 1.5)
# text(20, forward_models[20], labels = paste0("Forward = ", forward_models[20]), pos = 4, col = "red")
# Define the number of predictors from 1 to 20
num_predictors <- 1:20
# Compute total models for Best Subset Selection (2^p)
total_models <- 2^num_predictors
# Compute total models for Forward Selection (1 + p(p+1)/2)
forward_models <- 1 + (num_predictors * (num_predictors + 1)) / 2
# Create a data frame for visualization
model_df <- data.frame(Num_Predictors = num_predictors,
Total_Models = total_models,
Forward_Models = forward_models)
options(scipen = 999)
# Print the table
print(model_df)
# Plot Best Subset Selection (Exponential Growth)
plot(num_predictors, total_models, type = "b", pch = 19, col = "blue",
xlab = "Number of Predictors (p)", ylab = "Total Models",
main = "Growth of Models: Best Subset vs. Forward Selection", log = "y")
# Add Forward Selection line (Polynomial Growth)
lines(num_predictors, forward_models, type = "b", pch = 17, col = "red")
# Add a legend
legend("topleft", legend = c("Best Subset", "Forward Selection"),
col = c("blue", "red"), pch = c(19, 17), lty = 1)
regfit_fwd = regsubsets(medv~, data = Boston, nvmax = 13, method = 'forward')
regfit_fwd = regsubsets(medv~, data = Boston, nvmax = 13, method = 'forward')
regfit_fwd = regsubsets(medv~, data = Boston, nvmax = 13, method = 'forward')
regfit_fwd = regsubsets(medv~., data = Boston, nvmax = 13, method = 'forward')
summary(regfit_fwd)
# Find the best model based on adjusted R-squared
best_model_index <- which.max(regfit_fwd$adjr2)
best_variables <- names(which(regfit_fwd$which[best_model_index,]))
regfit_fwd$which[best_model_index,]
which.max(regfit_fwd$adjr2)
# Find the best model based on adjusted R-squared
best_model_index <- which.max(summary_best$adjr2)
best_variables <- names(which(summary_best$which[best_model_index,]))
print(best_variables)
cat("Best model has", best_model_index, "predictors with highest adjusted R-squared:", max(summary_best$adjr2), "\n")
# Plot adjusted R-squared for different models
plot(summary_best$adjr2, type = "b", pch = 19, col = "blue",
xlab = "Number of Predictors", ylab = "Adjusted R-Squared",
main = "Best Subset Selection - Adjusted R-Squared")
# Add a point for the best model
points(best_model_index, max(summary_best$adjr2), col = "red", pch = 19, cex = 1.5)
# Find the best model based on adjusted R-squared
best_model_index <- which.max(summary_best$adjr2)
best_variables <- names(which(summary_best$which[best_model_index,]))
print(best_variables)
cat("Best model has", best_model_index, "predictors with highest adjusted R-squared:", max(summary_best$adjr2), "\n")
# Plot adjusted R-squared for different models
plot(summary_best$adjr2, type = "b", pch = 19, col = "blue",
xlab = "Number of Predictors", ylab = "Adjusted R-Squared",
main = "Best Subset Selection - Adjusted R-Squared")
# Add a point for the best model
points(best_model_index, max(summary_best$adjr2), col = "red", pch = 19, cex = 1.5)
coef(summary_best, 11)
# Find the best model based on adjusted R-squared
best_model_index <- which.max(summary_best$adjr2)
best_variables <- names(which(summary_best$which[best_model_index,]))
print(best_variables)
cat("Best model has", best_model_index, "predictors with highest adjusted R-squared:", max(summary_best$adjr2), "\n")
# Plot adjusted R-squared for different models
plot(summary_best$adjr2, type = "b", pch = 19, col = "blue",
xlab = "Number of Predictors", ylab = "Adjusted R-Squared",
main = "Best Subset Selection - Adjusted R-Squared")
# Add a point for the best model
points(best_model_index, max(summary_best$adjr2), col = "red", pch = 19, cex = 1.5)
coef(best_subset, 11)
regfit_fwd = regsubsets(medv~., data = Boston, nvmax = 13, method = 'forward')
summary(regfit_fwd)
regfit_fwd = regsubsets(medv~., data = Boston, nvmax = 13, method = 'forward')
summary_regfit_fwd = summary(regfit_fwd)
regfit_fwd = regsubsets(medv~., data = Boston, nvmax = 13, method = 'forward')
summary_regfit_fwd = summary(regfit_fwd)
summary_regfit_fwd
# Find the best model based on adjusted R-squared
best_model_index <- which.max(summary_regfit_fwd$adjr2)
best_variables <- names(which(summary_regfit_fwd$which[best_model_index,]))
print(best_variables)
cat("Best model has", best_model_index, "predictors with highest adjusted R-squared:", max(summary_regfit_fwd$adjr2), "\n")
# Plot adjusted R-squared for different models
plot(summary_regfit_fwd$adjr2, type = "b", pch = 19, col = "blue",
xlab = "Number of Predictors", ylab = "Adjusted R-Squared",
main = "Best Subset Selection - Adjusted R-Squared")
# Add a point for the best model
points(best_model_index, max(summary_regfit_fwd$adjr2), col = "red", pch = 19, cex = 1.5)
# Find the best model based on adjusted R-squared
best_model_index <- which.max(summary_regfit_fwd$adjr2)
best_variables <- names(which(summary_regfit_fwd$which[best_model_index,]))
print(best_variables)
cat("Best model has", best_model_index, "predictors with highest adjusted R-squared:", max(summary_regfit_fwd$adjr2), "\n")
# Plot adjusted R-squared for different models
plot(summary_regfit_fwd$adjr2, type = "b", pch = 19, col = "blue",
xlab = "Number of Predictors", ylab = "Adjusted R-Squared",
main = "Best Subset Selection - Adjusted R-Squared")
# Add a point for the best model
points(best_model_index, max(summary_regfit_fwd$adjr2), col = "red", pch = 19, cex = 1.5)
# Find the best model based on adjusted R-squared
best_model_index <- which.max(summary_regfit_fwd$adjr2)
best_variables <- names(which(summary_regfit_fwd$which[best_model_index,]))
print(best_variables)
cat("Best model has", best_model_index, "predictors with highest adjusted R-squared:", max(summary_regfit_fwd$adjr2), "\n")
# Plot adjusted R-squared for different models
plot(summary_regfit_fwd$adjr2, type = "b", pch = 19, col = "blue",
xlab = "Number of Predictors", ylab = "Adjusted R-Squared",
main = "Forward Selection - Adjusted R-Squared")
# Add a point for the best model
points(best_model_index, max(summary_regfit_fwd$adjr2), col = "red", pch = 19, cex = 1.5)
regfit_backwd = regsubsets(medv~., data = Boston, nvmax = 13, method = 'backward')
summary_regfit_fwd = summary(regfit_backwd)
summary_regfit_fwd
regfit_backwd = regsubsets(medv~., data = Boston, nvmax = 13, method = 'backward')
summary_regfit_fwd = summary(regfit_backwd)
summary_regfit_fwd
full_model <- lm(medv ~ ., data = Boston)
stepwise_model <- step(full_model, direction = "backward")
summary(stepwise_model)
regfit_backwd = regsubsets(medv~., data = Boston, nvmax = 13, method = 'leapBackward')
regfit_backwd = regsubsets(medv~., data = Boston, nvmax = 13, method = 'Backward')
regfit_backwd = regsubsets(medv~., data = Boston, nvmax = 13, method = 'backward')
summary_regfit_fwd = summary(regfit_backwd)
summary_regfit_fwd
full_model <- lm(medv ~ ., data = Boston)
# Perform backward elimination using AIC
backward_model <- step(full_model, direction = "backward")
# Print final model summary
summary(backward_model)
View(Boston)
new_boston = na.omit(Boston)
