install.packages('leaflet')
library(leaflet)
basemap <- leaflet() %>%
addProviderTiles(
"CartoDB.Positron",
group = "CartoDB.Positron"
)  %>%
addLayersControl(
baseGroups = c('CartoDB.Positron'), position = "topleft")
basemap
icon.fa <- makeAwesomeIcon(
icon = "home", markerColor = "red",
library = "fa",
iconColor = "black"
)
map_1 <- basemap %>%
addAwesomeMarkers(
lat = 48.1,
lng = 11.5,
label = "Starting point",
icon = icon.fa
)
map_1
map_1 <- basemap %>%
addAwesomeMarkers(
lat = -71.80,
lng = 42.46,
label = "Starting point",
icon = icon.fa
)
map_1
map_1 <- basemap %>%
addAwesomeMarkers(
lng = -71.80,
lat = 42.46,
label = "Starting point",
icon = icon.fa
)
map_1
basemap <- leaflet() %>%
addProviderTiles(
"CartoDB.Positron",
group = "CartoDB.Positron"
)  %>%
addProviderTiles(
"OpenStreetMap",
# give the layer a name
group = "OpenStreetMap"
)
addLayersControl(
baseGroups = c('CartoDB.Positron','OpenStreetMap'), position = "topleft")
basemap
icon.fa <- makeAwesomeIcon(
icon = "home", markerColor = "blue",
library = "fa",
iconColor = "white"
)
map_1 <- basemap %>%
addAwesomeMarkers(
lng = -71.80,
lat = 42.46,
label = "Starting point",
icon = icon.fa
)
map_1
basemap <- leaflet() %>%
addProviderTiles(
"CartoDB.Positron",
group = "CartoDB.Positron"
)  %>%
addProviderTiles(
"OpenStreetMap",
# give the layer a name
group = "OpenStreetMap"
) %>%
addLayersControl(
baseGroups = c('CartoDB.Positron','OpenStreetMap'), position = "topleft")
basemap
icon.fa <- makeAwesomeIcon(
icon = "home", markerColor = "blue",
library = "fa",
iconColor = "white"
)
map_1 <- basemap %>%
addAwesomeMarkers(
lng = -71.80,
lat = 42.46,
label = "Starting point",
icon = icon.fa
)
map_1
if (!require('leaflet')) install.packages('leaflet')
library(leaflet)
if (!require('leaflet')) install.packages('leaflet')
library(leaflet)
plot(pressure)
basemap <- leaflet() %>%
addProviderTiles(
"CartoDB.Positron",
group = "CartoDB.Positron"
)  %>%
addProviderTiles(
"OpenStreetMap",
# give the layer a name
group = "OpenStreetMap"
) %>%
setView(lng = -3.7, lat = 40.4, zoom = 5) %>%
addLayersControl(
baseGroups = c('CartoDB.Positron','OpenStreetMap'), position = "topleft")
basemap
basemap <- leaflet() %>%
addProviderTiles(
"CartoDB.Positron",
group = "CartoDB.Positron"
)  %>%
addProviderTiles(
"OpenStreetMap",
# give the layer a name
group = "OpenStreetMap"
) %>%
setView(lng = -3.7, lat = 40.4, zoom = 5) %>%
addLayersControl(
baseGroups = c('CartoDB.Positron','OpenStreetMap'), position = "topleft")
basemap
basemap <- leaflet() %>%
addProviderTiles(
"CartoDB.Positron",
group = "CartoDB.Positron"
)  %>%
addProviderTiles(
"OpenStreetMap",
# give the layer a name
group = "OpenStreetMap"
) %>%
setView(lng = -3.7, lat = 40.4, zoom = 5) %>%
addLayersControl(
baseGroups = c('CartoDB.Positron','OpenStreetMap'), position = "topleft")
basemap
basemap <- leaflet() %>%
addProviderTiles(
"CartoDB.Positron",
group = "CartoDB.Positron"
)  %>%
addProviderTiles(
"OpenStreetMap",
# give the layer a name
group = "OpenStreetMap"
) %>%
setView(lng = -3.7, lat = 40.4, zoom = 5) %>%
addLayersControl(
baseGroups = c('CartoDB.Positron','OpenStreetMap'), position = "topleft")
basemap
basemap <- leaflet() %>%
addProviderTiles(
"CartoDB.Positron",
group = "CartoDB.Positron"
)  %>%
addProviderTiles(
"OpenStreetMap",
# give the layer a name
group = "OpenStreetMap"
) %>%
addLayersControl(
baseGroups = c('CartoDB.Positron','OpenStreetMap'), position = "topleft")
basemap
basemap <- leaflet() %>%
addProviderTiles(
"CartoDB.Positron",
group = "CartoDB.Positron"
)  %>%
addProviderTiles(
"OpenStreetMap",
# give the layer a name
group = "OpenStreetMap"
) %>%
addProviderTiles(
"Esri.WorldImagery",
group = "Imagery"
)
basemap
basemap <- leaflet() %>%
addProviderTiles(
"CartoDB.Positron",
group = "CartoDB"
)  %>%
addProviderTiles(
"OpenStreetMap",
# give the layer a name
group = "OpenStreetMap"
) %>%
addProviderTiles(
"Esri.WorldImagery",
group = "Imagery"
)
basemap
icon.home <- makeAwesomeIcon(
icon = "school", markerColor = "blue",
library = "fa",
iconColor = "white"
)
basemap %>%
addAwesomeMarkers(
lat = 42.252,
lng =  -71.824,
label = "Home",
icon = icon.home
)
basemap
icon.home <- makeAwesomeIcon(
icon = "house", markerColor = "blue",
library = "fa",
iconColor = "white"
)
basemap %>%
addAwesomeMarkers(
lat = 42.252,
lng =  -71.824,
label = "Home",
icon = icon.home
)
basemap
icon.home <- makeAwesomeIcon(
icon = "house", markerColor = "blue",
library = "fa",
iconColor = "white"
)
basemap_01 = basemap %>%
addAwesomeMarkers(
lat = 42.252,
lng =  -71.824,
label = "Home",
icon = icon.home
)
basemap_01
icon.home <- makeAwesomeIcon(
icon = "flag", markerColor = "blue",
library = "fa",
iconColor = "white"
)
basemap_01 = basemap %>%
addAwesomeMarkers(
lat = 42.252,
lng =  -71.824,
label = "Home",
icon = icon.home
)
basemap_01
icon.home <- makeAwesomeIcon(
icon = "house", markerColor = "blue",
library = "fa",
iconColor = "white"
)
basemap_01 = basemap %>%
addAwesomeMarkers(
lat = 42.252,
lng =  -71.824,
label = "Home",
icon = icon.home
)
basemap_01
icon.home <- makeAwesomeIcon(
icon = "home", markerColor = "blue",
library = "fa",
iconColor = "white"
)
basemap_01 = basemap %>%
addAwesomeMarkers(
lat = 42.252,
lng =  -71.824,
label = "Home",
icon = icon.home
)
basemap_01
icon.home <- makeAwesomeIcon(
icon = "home", markerColor = "blue",
library = "fa",
iconColor = "white"
)
basemap %>%
addAwesomeMarkers(
lat = 42.252,
lng =  -71.824,
label = "Home",
icon = icon.home
)
basemap
icon.home <- makeAwesomeIcon(
icon = "home", markerColor = "blue",
library = "fa",
iconColor = "white"
)
basemap %>%
addAwesomeMarkers(
lat = 42.252,
lng =  -71.824,
label = "Home",
icon = icon.home
)
CRS(basemap)
crs(basemap)
class(basemap)
basemap@geometry
basemap$x
basemap$x$options
basemap$x$options$crs
basemap$x$options$crs$proj4def
basemap$x$options$crs$crsClass
print('projection of basemap: ', basemap$x$options$crs$crsClass)
print('projection of basemap: ' + basemap$x$options$crs$crsClass)
print(c('projection of basemap: ',  basemap$x$options$crs$crsClass))
parks = read.csv('D:\\GitRepo\\ssj-30262\\docs\\Lectures\\Week06_R_Mapping\\parks.csv')
head(parks)
basemap
basemap %>% addMarkers(lng = parks$x, lat = parks$y)
icons_list <- icons(iconUrl = 'https://fontawesome.com/icons/tree?s=solid',
iconWidth = 50, iconHeight = 50)
basemap %>% addMarkers(lng = parks$x, lat = parks$y, icon = icons_list)
icons_list <- icons(iconUrl = 'https://fontawesome.com/icons/tree?f=classic&s=solid',
iconWidth = 50, iconHeight = 50)
basemap %>% addMarkers(lng = parks$x, lat = parks$y, icon = icons_list)
install.packages("sf")
library(sf)
#set the working directory
setwd("D:\\Teaching_Clark")
getwd()
#read the shapefile
dsga = read_sf("DSGA_POLY.shp")
# install.packages("sf")
# library(sf)
#set the working directory
setwd("D:\\Teaching_Clark")
getwd()
#read the shapefile
# dsga = read_sf("DSGA_POLY.shp")
#
# #tranform crs
# tf_poly <- st_transform(dsga, crs = '+proj=longlat +datum=WGS84')
# print(tf_poly$geometry)
getwd()
setwd('D:\\Teaching_Clark\\GitRepo\\Spring2025\\geog-247\\docs\Labs\\Lab01')
setwd('D:\\Teaching_Clark\\GitRepo\\Spring2025\\geog-247\\docs\\Labs\\Lab01')
dfs = read.csv('street_trees.csv')
xlsx_file = readxl::read_excel('free_wifi_locations.xls')
dfs = read.csv('economic_indicators.csv')
xlsx_file = readxl::read_excel('free_wifi_locations.xls')
economics = read.csv('economic_indicators.csv')
wifi = readxl::read_excel('free_wifi_locations.xls')
View(economics)
colnames(ecnonmics)
colnames(economics)
economics = read.csv('economic_indicators.csv')
wifi = readxl::read_excel('free_wifi_locations.xls')
economics$diff_unemp_labor = economics$labor_force_part_rate - economics$unemp_rate
economics$diff_unemp_labor
sort(economics$diff_unemp_labor)
??sort
sort(economics$diff_unemp_labor, decreasing = TRUE)
economics[sort(economics$diff_unemp_labor, decreasing = TRUE),1:5]
economics[sort(economics$diff_unemp_labor, decreasing = TRUE),]
sort(economics$diff_unemp_labor, decreasing = TRUE)
economics[which(sort(economics$diff_unemp_labor, decreasing = TRUE)),]
which(sort(economics$diff_unemp_labor, decreasing = TRUE))
economics[sort(economics$diff_unemp_labor, decreasing = TRUE),]
order(economics$diff_unemp_labor, decreasing = TRUE)
economics[order(economics$diff_unemp_labor, decreasing = TRUE),c('Year','Month')]
??order
?order
summary(economics)
summary(wifi)
str(wifi)
View(economics)
c(1:nrow(economics))
economics$Time = c(1:nrow(economics))
?plot
??plot
?base::plot()
colnames(economics)
plot(hotel_occup_rate~Time, data=economics)
plot(hotel_occup_rate~Time, data=economics, typle = 'l')
plot(hotel_occup_rate~Time, data=economics, type = 'l')
View(economics)
plot(hotel_occup_rate~Month, data=economics, type = 'l')
?base::boxplot()
boxplot()
??boxplot()
colnames(economics)
boxplot(logan_intl_flights, data = economics)
boxplot(economics$logan_intl_flights)
plot(logan_intl_flights, Time, data = economics)
plot(logan_intl_flights~Time, data = economics)
plot(logan_intl_flights~Time, data = economics, type = 'l')
abline(lm(logan_intl_flights~Time, data=economics) )
boxplot(logan_intl_flights ~ Month, data = economics)
?base.plot
??base.plot
?summary.lm
?plot
?plot.default
?plot.base
??plot.base
?plot.base
?plot
?read.csv
write.csv(economics, 'economic_indicators.csv')
## Task 1
getwd()
setwd('D:\\Teaching_Clark\\GitRepo\\Spring2025\\geog-247\\docs\\Labs\\Practice01')
## Task 1
getwd()
setwd('D:\\Teaching_Clark\\GitRepo\\Spring2025\\geog-247\\docs\\Labs\\Practice01')
setwd('D:\\Teaching_Clark\\GitRepo\\Spring2025\\geog-247\\docs\\Labs\\Practice01')
## Task 1
getwd()
setwd('F:\\Clark_Universiy\\Clark_Teaching\\2025Spring\\geog-247_Statistics\\docs\\Labs\\Practice01')
## Task 2
economics = read.csv('economic_indicators.csv')
wifi = readxl::read_excel('free_wifi_locations.xls')
economics[order(economics$diff_unemp_labor, decreasing = TRUE),c('Year','Month')]
getwd()
setwd('F:\\Clark_Universiy\\Clark_Teaching\\2025Spring\\geog-247_Statistics\\docs\\Labs\\Practice01')
## Task 2
economics = read.csv('economic_indicators.csv')
wifi = readxl::read_excel('free_wifi_locations.xls')
## Task 3
economics$diff_unemp_labor = economics$labor_force_part_rate - economics$unemp_rate
economics[order(economics$diff_unemp_labor, decreasing = TRUE),c('Year','Month')]
economics[order(economics$diff_unemp_labor, decreasing = TRUE),c('Year','Month')]
economics[order(economics$diff_unemp_labor, decreasing = TRUE),c('Year','Month')]
order(economics$diff_unemp_labor, decreasing = TRUE)
economics[order(economics$diff_unemp_labor, decreasing = TRUE),c('Year','Month')]
summary(wifi)
summary(wifi$OID_)
summary(wifi$neighborhood_id)
plot(logan_intl_flights~Time, data = economics, type = 'l')
abline(lm(logan_intl_flights~Time, data=economics))
economics[order(economics$diff_unemp_labor, decreasing = TRUE),c('Year','Month')]
